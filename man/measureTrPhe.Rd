% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measureTrPhe.R
\name{measureTrPhe}
\alias{measureTrPhe}
\alias{measureTrPheSingle}
\alias{clusterCOMBS}
\alias{countNonZeros}
\title{Measuring mutually exclusive transcriptional phenotypes}
\usage{
measureTrPhe(data, method = c("wilcox", "ks")[1], mode = c("pairwise",
  "one_vs_all")[1], cutoff = 1, assays_matrix_name = "norm_counts",
  colData_cluster_col = "clusters", pval_corr_method = "fdr",
  low_exprs_threshold = 0.1, low_exprs_cells = 6, n_cores = detectCores()
  - 1)

measureTrPheSingle(norm_counts, combinations, combinations_ind = 1,
  cutoff = 0.05, pval_corr_method = "fdr", low_exprs_threshold = 1,
  low_exprs_cells = 6, method = c("wilcox", "ks")[1])

clusterCOMBS(clusters, mode = c("pairwise", "one_vs_all")[1])

countNonZeros(data, low_exprs_threshold = 0.1,
  colData_cluster_col = "clusters", assays_matrix_name = "norm_counts")
}
\arguments{
\item{data}{object of class SingleCellExperiment containing single cell data (normalised read counts, cells already assigned to clusters)}

\item{method}{method for detecting differentially expressed genes. Currently only Wilcox and KS tests are implemented \link[stats]{wilcox.test}, \link[stats]{ks.test}.}

\item{mode}{compare clusters to each other (\code{"pairwise"}) or \code{"one_vs_all"}}

\item{cutoff}{FDR-corrected p-value cutoff}

\item{assays_matrix_name}{name of the matrix in \code{assays(data)} that stores normalised read counts}

\item{colData_cluster_col}{name of the column in \code{colData(data)} that stores cluster assignment of cells}

\item{pval_corr_method}{multiple hypothesis p-value correction method. Details: \link[stats]{p.adjust} - method.}

\item{low_exprs_threshold}{threshold (normalised read count) below which gene doesn't qualify as being expressed in a cell}

\item{low_exprs_cells}{remove genes that are expressed at a level higher or equal \code{low_exprs_threshold} in fewer than \code{low_exprs_cells} cells at each between-cluster comparison}

\item{n_cores}{number of cores to be used in parallel processing (over combinations of clusters). More details: \link[parallel]{parLapply}, \link[parallel]{makeCluster}, \link[parallel]{detectCores}}

\item{combinations}{data.table containing phenotype id (phenotypes) and which clusters are to be compared}

\item{combinations_ind}{which combination should be analysed?}

\item{clusters}{character vector, clusters (cell types) present in the data}

\item{clusters}{character vector, clusters (cell types) present in the data}
}
\value{
\code{measureTrPhe}: data.table containing data.table containing phenotype id (phenotypes), which genes are assigned to them, test statistic and difference in medians between clusters

\code{measureTrPheSingle}: data.table containing phenotype id (phenotypes), which genes are assigned to them, test statistic and difference in medians between clusters

\code{clusterCOMBS}: data.table containing phenotype id (phenotypes) and which clusters are to be compared

\code{countNonZeros}: data.table containing the number of cells, number of non-zero cells per each gene and cluster
}
\description{
\code{measureTrPhe} idenfifies mutually exclusive transcriptional phenotypes in single cell data (normalised read counts, SingleCellExperiment): genes expressed in one cell type but not the other (or all other) using one-tailed Wilcox, KS or other differential expression tests

\code{measureTrPheSingle}: idenfifies mutually exclusive transcriptional phenotypes for 2 clusters of single cells

\code{clusterCOMBS}: produces a data.table specifying all combinations of clusters for differential expression analysis.

\code{countNonZeros}: count non-zero cells per gene and per cluster
}
\examples{
library(ArrayExpress)
library(SingleCellExperiment)
library(data.table)
library(ggplot2)
file_paths = getAE("E-MTAB-6153", type = "processed", path = "../regulatory_networks_by_cmap/data/organogenesis_scRNAseq", local = T)
# keep only normalised counts
file_paths$processedFiles = file_paths$processedFiles[file_paths$processedFiles == "normalisedCounts.tsv"]
# get the list of column names
cnames = getcolproc(file_paths)
data = readEMTAB6153ProcData(path = "../regulatory_networks_by_cmap/data/organogenesis_scRNAseq", procFile = "normalisedCounts.tsv", procol = cnames)
pVals = measureTrPhe(data, method = "wilcox", mode = c("pairwise", "one_vs_all")[1], cutoff = 1, assays_matrix_name = "norm_counts", colData_cluster_col = "clusters", pval_corr_method = "fdr", low_exprs_threshold = 0.1, low_exprs_cells = 6, n_cores = detectCores() - 1)
qplot(x = pVals$diff_median, y = -log10(pVals$pVals), geom = "bin2d", xlim = c(-1,50), ylim = c(-1, 300), bins = 150) + theme_light()
}
\author{
Vitalii Kleshchevnikov
}
