% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findOrthologs.R
\name{findOrthologs}
\alias{findOrthologs}
\alias{findOrthologsHsMm}
\alias{findOrthologsMmHs}
\alias{loadBIOMARTdatasets}
\alias{attributesFiltersFromTo}
\title{map orthologous genes using ENSEMBL BioMART}
\usage{
findOrthologs(datasets_FROM_TO = loadBIOMARTdatasets(from =
  "hsapiens_gene_ensembl", to = "mmusculus_gene_ensembl"),
  from_filters = "hgnc_symbol", from_values = c("TP53", "TERT"),
  to_attributes = "external_gene_name",
  to_homolog_attribute = "mmusculus_homolog_ensembl_gene",
  from_gene_id_name = "human_ensembl_gene_id",
  to_gene_id_name = "mouse_ensembl_gene_id")

findOrthologsHsMm(from_filters = "hgnc_symbol", from_values = c("TP53",
  "TERT"), to_attributes = "external_gene_name")

findOrthologsMmHs(from_filters = "ensembl_gene_id",
  from_values = c("ENSMUSG00000059552", "ENSMUSG00000021611"),
  to_attributes = "hgnc_symbol")

loadBIOMARTdatasets(from = "hsapiens_gene_ensembl",
  to = "mmusculus_gene_ensembl")

attributesFiltersFromTo(datasets_FROM_TO = loadBIOMARTdatasets())
}
\arguments{
\item{datasets_FROM_TO}{environment containing "Mart" objects produced by \code{loadBIOMARTdatasets()}. It is convenient to specify datasets here rather than pre-loading. Full list of datasets in ENSEMBL BioMART: listDatasets("ensembl")}

\item{from_filters}{Filters (one or more) that should be used in the query in the "from" species database. A possible list of filters can be retrieved using \code{attributesFiltersFromTo(datasets_FROM_TO = loadBIOMARTdatasets())}.}

\item{from_values}{Values of the filter, e.g. vector of affy IDs in the "from" species database. If multiple filters are specified then the argument should be a list of vectors of which the position of each vector corresponds to the position of the filters in the filters argument. Please limit the number of values to less than 500.}

\item{to_attributes}{Attributes you want to retrieve from the "to" species database. A possible list of attributes can be retrieved using the function \code{attributesFiltersFromTo(datasets_FROM_TO = loadBIOMARTdatasets())}.}

\item{to_homolog_attribute}{Attribute that returns homolog gene id in the "from" database}

\item{from_gene_id_name}{name of the column containing the ENSEMBL gene ids of "from" species}

\item{to_gene_id_name}{name of the column containing the ENSEMBL gene ids of "from" species}

\item{from}{ENSEMBL biomart dataset for a species whose identifiers you want to convert. Full list of possible options: listDatasets("ensembl")}

\item{to}{ENSEMBL biomart dataset for a species whose identifiers you want convert into.}

\item{datasets_FROM_TO}{environment containing "Mart" objects produced by \code{loadBIOMARTdatasets()}}
}
\value{
findOrthologs(): data.frame containing the mapping of homologous genes from one species to another species including \code{to_attributes}

findOrthologsHsMm(): data.frame containing the mapping of homologous genes from human to mouse including \code{to_attributes}

findOrthologsMmHs(): data.frame containing the mapping of homologous genes from mouse to human including \code{to_attributes}

loadBIOMARTdatasets(): environment containing 2 object of class 'Mart', one for each species dataset

attributesFiltersFromTo(): list containing 4 vector of either filters or attributes for each dataset
}
\description{
findOrthologs(): map orthologous genes using ENSEMBL BioMART (\link[biomaRt]{getBM}) from one species to another species. This function retrieves ids by 500 at a time to decrease the load on ENSEMBL servers.

findOrthologsHsMm(): map orthologous genes using ENSEMBL BioMART from human to mouse

findOrthologsMmHs(): map orthologous genes using ENSEMBL BioMART from mouse to human

loadBIOMARTdatasets(): Load 2 ENSEMBL BioMART datasets for finding orthologs. Details \link[biomaRt]{useMart}

attributesFiltersFromTo(): List filters and attributes available in each dataset. Details: \link[biomaRt]{listAttributes}
}
\examples{
findOrthologs()
findOrthologsHsMm()
findOrthologsMmHs()
attributes = attributesFiltersFromTo(datasets_FROM_TO = loadBIOMARTdatasets())
grep("Mouse gene stable ID", attributes$from_attributes$description, ignore.case = T, value = T)
attributes$from_attributes[which(attributes$from_attributes$description == "Mouse gene name"),]
grep("hgnc_symbol", attributes$from_attributes$name, value = T)
}
\author{
Vitalii Kleshchevnikov
}
